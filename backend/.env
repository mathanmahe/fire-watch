# SQLite lives next to the code (file gets created automatically)
DATABASE_URL="file:./firewatch.db"

# Cognito (ID token verification)
COGNITO_USER_POOL_ID="us-east-1_5FXHly4RO"
COGNITO_CLIENT_ID="2ulfj1slv1huvl5gjskshbhmtf"
# COGNITO_CLIENT_SECRET="1c7nefnpj523hievj35lk08rbqd46h2a434ra318f1gtadp7cn1r"
COGNITO_REGION="us-east-1"

AWS_REGION="us-east-1"
SNS_TOPIC_ARN="arn:aws:sns:us-east-1:185329004895:fire-alerts"

# Cloud detection
FIRE_ENDPOINT="https://2cwzmjzkx4.execute-api.us-east-1.amazonaws.com/default/fire-frame-receiver"

# ffmpeg (must be installed)
FFMPEG_BIN="ffmpeg"
NODE_ENV="production"
# Server
PORT=4000

# Docker currently handles this

MEDIAMTX_CONFIG="./mediamtx.yml"

# ICE WebRTC port range (defaults to 8000-8100)
MEDIAMTX_ICE_MIN="8000"
MEDIAMTX_ICE_MAX="8100"

MEDIAMTX_IMAGE="bluenviron/mediamtx:latest"
# MEDIAMTX_IMAGE="bluenviron/mediamtx:v1.15.0" # if you want a stable version

# Network mode: "host" (Linux only) or "bridge" (cross-platform)
# On Linux: host network gives better WebRTC performance
# On macOS/Windows: bridge network required for port mapping
MEDIAMTX_NETWORK_MODE="bridge"

# linux
# DOCKER_HOST="unix:///run/user/1000/docker.sock"
# macos
DOCKER_HOST="unix:///var/run/docker.sock"
# Optional: Directory for MediaMtx recordings
# MEDIAMTX_RECORDINGS_DIR="/path/to/recordings"