# mediamtx.yml (Docker / v1.14.x) â€” RTSP pull, HLS+WebRTC out
logLevel: debug

# HLS server
hls: yes
hlsAddress: :8888
hlsAllowOrigin: "*"
hlsVariant: lowLatency # optional but nice for low latency

# WebRTC server (WHEP/WHIP)
webrtc: yes
webrtcAddress: :8889
webrtcAllowOrigin: "*"

webrtcLocalUDPAddress: :8189
webrtcLocalTCPAddress: :8189

# Advertise correct IPs to clients (LAN):
webrtcIPsFromInterfaces: no
# Explicit IPs for WebRTC (replace with actual deployment IPs)
# Only advertise the IP that browsers can actually reach
webrtcAdditionalHosts: ["10.0.0.160"]

# (Optional) RTSP server if you also need to accept RTSP publishers
rtsp: yes
rtspAddress: :8554

paths:
  # Testing setup - don't auto-pull, just accept incoming streams
  # You can publish to these paths via OBS, ffmpeg, or your cameras
  cam1:
    # No source = on-demand publishing (cameras can push to this path)
    # To test with ffmpeg from your local machine:
    # ffmpeg -re -i /path/to/video.mp4 -c copy -f rtsp rtsp://10.0.0.160:8554/cam1

  cam2:
    # No source

  # Keep your real RTSP pull cameras commented out until accessible
  # cam1:
  #   source: rtsp://admin:CCTVCheck%40123@10.0.0.142:8554/live
  # cam2:
  #   source: rtsp://admin:CCTVCheck%40123@10.0.0.98:8554/live
